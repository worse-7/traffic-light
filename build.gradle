group ''
buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: "org.sonarqube"

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

jar {
    baseName = 'traffic-light'
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compileOnly('org.projectlombok:lombok')
    compile('org.springframework:spring-context-support')

    compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.1.RELEASE'

    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.21'
    compile 'org.codehaus.janino:janino:3.0.6'
    compile 'org.codehaus.janino:commons-compiler:3.0.6'
    compile 'ch.qos.logback:logback-core:1.1.8'
    compile 'net.logstash.logback:logstash-logback-encoder:4.11'
}
//plugins {
//    id "org.sonarqube" version "2.6.1"
//}
jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("${buildDir}/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        xml.destination file("${buildDir}/reports/jacoco/jacocoXml")
        html.destination file("${buildDir}/reports/jacoco/jacocoHtml")
    }
}
